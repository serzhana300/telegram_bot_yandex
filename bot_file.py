# –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
import json
import pprint
import random
import config
import sqlite3
import telebot
import re
import requests
from telebot import types


MEMORY_USER = {}

# –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
def check_num(string):
    phone = re.sub(r'\b\D', '', string)
    clear_phone = re.sub(r'[\ \(]?', '', phone)
    if re.findall(r'^[\+7|8]*?\d{10}$', clear_phone) or re.match(r'^\w+[\.]?(\w+)*\@(\w+\.)*\w{2,}$', string):
        return True
    else:
        return False


bot = telebot.TeleBot(config.TOKEN)


@bot.message_handler(commands=['admin_console'])
# –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
def admin_console(message):
    connect = sqlite3.connect('users.db')
    cursor = connect.cursor()
    id = message.chat.id

    kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)

    bt_rolls = types.KeyboardButton(text='***')
    kb.add(bt_rolls)

    bot.send_message(id, '''
This console was created to assign an account to accept orders.
Please enter the password key to assign this account to the administrative.
''', reply_markup=kb)

    MEMORY_USER[id]["FLAG"] = 'ADMIN'


@bot.message_handler(commands=['start'])
# –Ω–∞—á–∞–ª–æ –æ–±—â–µ–Ω–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
def start(message):
    id = message.chat.id
    if id not in MEMORY_USER.keys():
        time_db = {'FLAG': 'continue_start',
                   'values': [],
                   'order': [],
                   'user_name': '',
                   'phone_number': '',
                   'cont_order': True}
        MEMORY_USER[id] = time_db
    else:
        MEMORY_USER[id]['FLAG'] = 'continue_start'
        MEMORY_USER[id]['values'] = []
        MEMORY_USER[id]['order'] = []
        MEMORY_USER[id]['user_name'] = ''
        MEMORY_USER[id]['phone_number'] = ''
        MEMORY_USER[id]['cont_order'] = True

    kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)

    bt_rolls = types.KeyboardButton(text='–•–æ—á—É —Ä–æ–ª–ª—ã')
    bt_wok = types.KeyboardButton(text='–•–æ—á—É –≤–æ–∫')
    bt_set = types.KeyboardButton(text='–•–æ—á—É —Å–µ—Ç')
    bt_ju = types.KeyboardButton(text='–•–æ—á—É –º–æ—Ä—Å')
    kb.add(bt_set, bt_rolls, bt_wok, bt_ju)

    bot.send_message(id, '''–î–æ–±—Ä—ã–π –¥–µ–Ω—å ! üòÉ 
–Ø - –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫(Yandex Sushi)
–Ø –º–æ–≥—É –≤–∞—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å:
‚Ä¢—Ä–æ–ª–ª—ã
‚Ä¢–≤–æ–∫
‚Ä¢—Å–µ—Ç
‚Ä¢–º–æ—Ä—Å
–î–ª—è –∑–∞–∫–∞–∑–∞ –Ω–∞–ø–∏—à–∏—Ç–µ ,,–•–æ—á—É ‚Ä¶(–≤—ã–±—Ä–∞–Ω–Ω–æ–µ –≤–∞–º–∏ –±–ª—é–¥–æ)‚Äô‚Äô
''', reply_markup=kb)


@bot.message_handler(commands=["check_bonus"])
# –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É—á–∞—Å—Ç–∏–µ –≤ –±–æ–Ω—É—Å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ

def cmd_add(message):
    u_id = message.chat.id

    connect = sqlite3.connect('users.db')
    cursor = connect.cursor()
    cursor.execute(f"""SELECT user_id,
       phone_number,
       name_pers,
       balance
  FROM users WHERE user_id == '{u_id}';""")
    data = cursor.fetchall()

    if not data:
        bot.send_message(message.chat.id, '–í—ã –Ω–µ —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ —Å–∏—Å—Ç–µ–º–µ.\n'
                                          '–°–¥–µ–ª–∞–π—Ç–µ 1 –∑–∞–∫–∞–∑, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–∏—Å—Ç–µ–º—ã')
    else:
        bot.send_message(message.chat.id, f'–í—ã —É–∂–µ —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ —Å–∏—Å—Ç–µ–º–µ –±–æ–Ω—É—Å–æ–≤.\n–í–∞—à–µ –∏–º—è: {data[0][2]}\n'
                                          f'–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {data[0][1]}\n'
                                          f'–í–∞—à –±–∞–ª–∞–Ω—Å: {data[0][3]}')


@bot.message_handler(commands=['delete'])
# –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –±–æ–Ω—É—Å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
def delete(msg):
    u_id = msg.chat.id

    connect = sqlite3.connect('users.db')
    cursor = connect.cursor()

    cursor.execute(f"""DELETE FROM users WHERE user_id = {u_id}""")
    connect.commit()
    bot.send_message(u_id,
                     '–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã –±–æ–Ω—É—Å–æ–≤.')


@bot.message_handler(content_types=['text'])
def get_text(message):
    try:
        id = message.chat.id
        print('--------------------------------')
        pprint.pprint(MEMORY_USER)
        print('--------------------------------')
        # values = MEMORY_USER[id]['values']
        # order = MEMORY_USER[id]['order']
        # user_name = MEMORY_USER[id]['user_name']
        # phone_number = MEMORY_USER[id]['phone_number']
        # cont_order = MEMORY_USER[id]['cont_order']
        if message.text == '/start':
            if id not in MEMORY_USER.keys():
                time_db = {'FLAG': 'continue_start',
                           'values': [],
                           'order': [],
                           'user_name': '',
                           'phone_number': '',
                           'cont_order': True}
                MEMORY_USER[id] = time_db
            else:
                MEMORY_USER[id]['FLAG'] = 'continue_start'
                MEMORY_USER[id]['values'] = []
                MEMORY_USER[id]['order'] = []
                MEMORY_USER[id]['user_name'] = ''
                MEMORY_USER[id]['phone_number'] = ''
                MEMORY_USER[id]['cont_order'] = True

            kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)

            bt_rolls = types.KeyboardButton(text='–•–æ—á—É —Ä–æ–ª–ª—ã')
            bt_wok = types.KeyboardButton(text='–•–æ—á—É –≤–æ–∫')
            bt_set = types.KeyboardButton(text='–•–æ—á—É —Å–µ—Ç')
            bt_ju = types.KeyboardButton(text='–•–æ—á—É –º–æ—Ä—Å')

            kb.add(bt_set, bt_rolls, bt_wok, bt_ju)

            bot.send_message(id, '''–î–æ–±—Ä—ã–π –¥–µ–Ω—å ! üòÉ 
–Ø - –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫(Yandex Sushi)
–Ø –º–æ–≥—É –≤–∞—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å:
‚Ä¢—Ä–æ–ª–ª—ã
‚Ä¢–≤–æ–∫
‚Ä¢—Å–µ—Ç
‚Ä¢–º–æ—Ä—Å
–î–ª—è –∑–∞–∫–∞–∑–∞ –Ω–∞–ø–∏—à–∏—Ç–µ ,,–•–æ—á—É ‚Ä¶(–≤—ã–±—Ä–∞–Ω–Ω–æ–µ –≤–∞–º–∏ –±–ª—é–¥–æ)‚Äô‚Äô
                                         ''', reply_markup=kb)

        if MEMORY_USER[id]['FLAG'] == '':
            if id not in MEMORY_USER.keys():
                time_db = {'FLAG': 'continue_start',
                           'values': [],
                           'order': [],
                           'user_name': '',
                           'phone_number': '',
                           'cont_order': True}
                MEMORY_USER[id] = time_db
            else:
                MEMORY_USER[id]['FLAG'] = 'continue_start'
                MEMORY_USER[id]['values'] = []
                MEMORY_USER[id]['order'] = []
                MEMORY_USER[id]['user_name'] = ''
                MEMORY_USER[id]['phone_number'] = ''
                MEMORY_USER[id]['cont_order'] = True
            kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
            bt_rolls = types.KeyboardButton(text='–•–æ—á—É —Ä–æ–ª–ª—ã')
            bt_wok = types.KeyboardButton(text='–•–æ—á—É –≤–æ–∫')
            bt_set = types.KeyboardButton(text='–•–æ—á—É —Å–µ—Ç')
            bt_ju = types.KeyboardButton(text='–•–æ—á—É –º–æ—Ä—Å')
            kb.add(bt_set, bt_rolls, bt_wok, bt_ju)

            bot.send_message(id, '''–î–æ–±—Ä—ã–π –¥–µ–Ω—å ! üòÉ 
–Ø - –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫(Yandex Sushi)
–Ø –º–æ–≥—É –≤–∞—Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å:
‚Ä¢—Ä–æ–ª–ª—ã
‚Ä¢–≤–æ–∫
‚Ä¢—Å–µ—Ç
‚Ä¢–º–æ—Ä—Å
–î–ª—è –∑–∞–∫–∞–∑–∞ –Ω–∞–ø–∏—à–∏—Ç–µ ,,–•–æ—á—É ‚Ä¶(–≤—ã–±—Ä–∞–Ω–Ω–æ–µ –≤–∞–º–∏ –±–ª—é–¥–æ)‚Äô‚Äô
                                 ''', reply_markup=kb)

        elif MEMORY_USER[id]['FLAG'] == 'ADMIN':
            if message.text == '***':
                pass
            elif message.text == 'n-X5-G-rwl-C':

                connect = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute(f"""SELECT ID_ADMIN FROM ADMIN""")
                data = cursor.fetchall()
                f = data[0][0]
                cursor.execute(f"""DELETE FROM ADMIN
          WHERE ID_ADMIN = {f};""")
                cursor.execute(f"""INSERT INTO ADMIN (
                          ID_ADMIN
                      )
                      VALUES (
                          {id}
                      );""")
                connect.commit()
                print(id)
                bot.send_message(id, 'This account is assigned by the bot administrator.')
        elif MEMORY_USER[id]['FLAG'] == 'continue_oform':
            def verif_order():
                u_id = message.chat.id

                connect = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute(f"""SELECT user_id,
                       phone_number,
                       name_pers,
                       balance
                  FROM users WHERE user_id == {u_id};""")
                data = cursor.fetchall()
                if not data:
                    return False
                else:
                    return True

            kb_start = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            bt_start = types.KeyboardButton(text='/start')
            film_kb = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
            yes_bt = types.KeyboardButton(text='–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–ºüé•')
            no_bt = types.KeyboardButton(text='–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ')
            film_kb.add(yes_bt, no_bt)
            kb_start.add(bt_start)

            kbb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            bt_yes = types.KeyboardButton(text='–•–æ—á—É!')
            bt_not = types.KeyboardButton(text='–ù–µ—Ç, —Å–ø–∞—Å–∏–±–æ')
            kbb.add(bt_yes, bt_not)
            kb_smile = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btfl = types.KeyboardButton(text='üòç')
            kb_smile.add(btfl)
            tm = MEMORY_USER[id]['order']
            n = ''

            for i in tm:
                n += f'{i[0]} - {i[1]}x\n'

            if message.text == 'üòç':
                bot.send_message(id, '–ú—ã –∑–Ω–∞–ª–∏ —á—Ç–æ –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è! <3', reply_markup=kb_start)

            elif message.text.lower() == '–¥–∞, –≤—Å–µ –≤–µ—Ä–Ω–æ':
                strin = f"""–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –∑–∞ –∑–∞–∫–∞–∑ !üòâ
–í –≤–∞—à–µ–º –∑–∞–∫–∞–∑–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è:\n
{n}
____________________
–ó–∞–∫–∞–∑ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è, –∂–¥–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –ø–æ –Ω–æ–º–µ—Ä—É, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —É–∫–∞–∑–∞–ª–∏ –≤ –∑–∞–∫–∞–∑–µ ! üòÉ"""
                bot.send_message(id, strin)
                connect = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute(f"""SELECT ID_ADMIN FROM ADMIN""")
                data = cursor.fetchall()
                val = data[0][0]
                bot.send_message(val, f"""–ò–º—è: {MEMORY_USER[id]['user_name']},
–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {MEMORY_USER[id]['phone_number']},
–ó–∞–∫–∞–∑: {n}""")
                f = True

                if not verif_order():
                    bot.send_message(id, '–í—ã —Å–æ–≤–µ—Ä—à–∏–ª–∏ 1 –∑–∞–∫–∞–∑ –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ! '
                                         '–í—ã —Ö–æ—Ç–∏—Ç–µ —É—á–∞–≤—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –±–æ–Ω—É—Å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –Ω–∞—à–µ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞?',
                                     reply_markup=kbb)
                    f = False
                if f:
                    bot.send_message(id, '–ú—ã –º–æ–∂–µ–º –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞—Ç—å –≤–∞–º —Ñ–∏–ª—å–ºüé•', reply_markup=film_kb)

            elif message.text.lower() == '–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ñ–∏–ª—å–ºüé•':
                res_city = requests.get(
                    f'https://imdb-api.com/ru/API/Top250Movies/k_z7ny8kho'
                )
                cash = json.loads(res_city.content)['items']
                strok = '–ü–æ–¥ –ø—Ä–∏—è—Ç–Ω—ã–µ —Ä–æ–ª–ª—ã –º–æ–∂–Ω–æ –∏ –ø—Ä–∏—è—Ç–Ω—ã–π —Ñ–∏–ª—å–º –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—åüòú\n' \
                        '–í–æ—Ç —á—Ç–æ –º—ã –º–æ–∂–µ–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—åüòâ\n'

                for i in range(3):
                    create_strok = '\nüî•'
                    val = random.choice(cash)
                    create_strok += f"{val['fullTitle']}\n"
                    create_strok += f"–†–µ–π—Ç–∏–Ω–≥: {val['imDbRating']}\n"
                    create_strok += f"–ì–æ–¥ –≤—ã—Ö–æ–¥–∞: {val['year']}\n"
                    strok += create_strok

                photo = open('brosh_pic/film.jpg', 'rb')
                bot.send_photo(id, photo, caption=strok, reply_markup=kb_smile)

            elif message.text.lower() == '—Ö–æ—á—É!':
                bot.send_message(id, '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –°–µ–π—á–∞—Å –º—ã –≤–∞—Å –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É–µ–º!')

                u_id = message.chat.id
                connect = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute(f"""SELECT user_id,
                       phone_number,
                       name_pers,
                       balance
                  FROM users WHERE user_id == '{id}';""")
                data = cursor.fetchall()

                if not data:
                    cursor.execute(f"""INSERT OR IGNORE INTO users (
                                      user_id,
                                      phone_number,
                                      name_pers,
                                      balance
                                  )
                                  VALUES (
                                      '{id}',
                                      '{MEMORY_USER[id]['phone_number']}',
                                      '{MEMORY_USER[id]['user_name']}',
                                      '{0}'
                                  );""")
                    connect.commit()
                    bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ –≤ —Å–∏—Å—Ç–µ–º–µ!')
                    bot.send_message(message.chat.id, f'–í—ã —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ —Å–∏—Å—Ç–µ–º–µ –±–æ–Ω—É—Å–æ–≤.\n–í–∞—à–µ –∏–º—è: {MEMORY_USER[id]["user_name"]}\n'
                                                      f'–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {MEMORY_USER[id]["phone_number"]}\n'
                                                      f'–í–∞—à –±–∞–ª–∞–Ω—Å: 0 –±–∞–ª–ª–æ–≤', reply_markup=kb_smile)
                else:
                    bot.send_message(message.chat.id, f'–í—ã —É–∂–µ —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ —Å–∏—Å—Ç–µ–º–µ –±–æ–Ω—É—Å–æ–≤.\n–í–∞—à–µ –∏–º—è: {data[0][2]}\n'
                                                      f'–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {data[0][1]}\n'
                                                      f'–í–∞—à –±–∞–ª–∞–Ω—Å: {data[0][3]} –±–∞–ª–ª–æ–≤')
            elif message.text.lower() == '–∏–∑–º–µ–Ω–∏—Ç—å':
                bot.send_message(id, '–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞, –≤–∞–º –Ω–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–∫–∞–∑.', reply_markup=kb_start)
                MEMORY_USER[id]['FLAG'] = ''
            elif message.text.lower() == '–Ω–µ—Ç, —Å–ø–∞—Å–∏–±–æ':
                bot.send_message(id, '–•–æ—Ä–æ—à–æ, –æ–∂–∏–¥–∞–π—Ç–µ –∑–≤–æ–Ω–∫–∞ –æ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞!\n–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑!', reply_markup=kb_start)
                MEMORY_USER[id]['FLAG'] = ''

        elif MEMORY_USER[id]['FLAG'] == 'continue_start':
            if message.text.lower() == '—Ö–æ—á—É —Ä–æ–ª–ª—ã':

                kb_skip = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
                bt_s = types.KeyboardButton(text='-–ø–æ–ª—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º-')
                kb_skip.add(bt_s)

                if MEMORY_USER[id]['user_name'] != '':
                    order_time = []

                    connect = sqlite3.connect('eat.db')
                    cursor = connect.cursor()
                    cursor.execute(f"""SELECT name, cost, count FROM rolls""")
                    data = cursor.fetchall()
                    cursor = sqlite3.connect('users.db')

                    if message.text in MEMORY_USER[id]['values']:
                        f = False
                        for i in order_time:
                            if i[0] == message.text:
                                cos = 0
                                for b in data:
                                    if message.text == b[0]:
                                        cos = b[1]
                                order_time[order_time.index(i)][1] += 1
                                order_time[order_time.index(i)][2] = cos
                                print(i)
                                f = True

                        if not f:
                            cos = 0
                            for b in data:
                                if message.text == b[0]:
                                    cos = b[1]
                            order_time.append([message.text, 1, cos])
                        bot.send_message(id, '–ú—ã –∑–∞–ø–∏—Å–∞–ª–∏, —á—Ç–æ-—Ç–æ –µ—â–µ?')
                    else:
                        if '—Ö–æ—á—É' not in str(message.text.lower()).split():
                            bot.send_message(id, '–¢–∞–∫–æ–≥–æ –±–ª—é–¥–∞ –Ω–µ—Ç –≤ –Ω–∞—à–∏—Ö —Å–ø–∏—Å–∫–∞—Ö.')
                    n = ''
                    for i in order_time:
                        if i:
                            n += f'\nüîª{i[0]}\n –¶–µ–Ω–∞:    {i[1]}‚ÇΩ\n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –Ω–∞–±–æ—Ä–µ: {i[2]}—à—Ç.\n'
                    MEMORY_USER[id]['order'] = order_time
                    bot.send_message(id, '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä!')
                    pic = open('brosh_pic/rolls_pic.jpg', 'rb')
                    bot.send_photo(id, pic)
                    kb_rolls = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

                    bt_yd = types.KeyboardButton(text='–†–æ–ª–ª –§—É–¥–∑–∏')
                    bt_end = types.KeyboardButton(text='–ù–∞ —ç—Ç–æ–º –≤—Å–µ')
                    bt_yd_2 = types.KeyboardButton(text='–ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è —Å—è–∫–µ —Å –∏–∫—Ä–æ–π')
                    bt_lapsh = types.KeyboardButton(text='–ú–∞–Ω–≥–æ–≤—ã–π —É–Ω–∞–≥–∏')
                    bt_ris = types.KeyboardButton(text='–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è –∫–ª–∞—Å—Å–∏–∫–∞')

                    kb_rolls.add(bt_yd, bt_yd_2, bt_lapsh, bt_ris, bt_end)
                    bot.send_message(id, f"""–í–æ—Ç —á—Ç–æ –º—ã –º–æ–∂–µ–º –≤–∞–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å:{n}""", reply_markup=kb_rolls)
                else:
                    bot.send_message(id, '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä!')
                    bot.send_message(id, '–ö–∞–∫ —è –º–æ–≥—É –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?', reply_markup=kb_skip)
                    MEMORY_USER[id]['FLAG'] = 'continue_roll'

            elif message.text.lower() == '—Ö–æ—á—É –≤–æ–∫':
                kb_skip = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
                bt_s = types.KeyboardButton(text='-–ø–æ–ª—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º-')
                kb_skip.add(bt_s)

                if MEMORY_USER[id]['user_name'] != '':
                    order_time = []

                    connect = sqlite3.connect('eat.db')
                    cursor = connect.cursor()
                    cursor.execute(f"""SELECT name, cost, count FROM wok""")
                    data = cursor.fetchall()

                    if message.text in MEMORY_USER[id]['values']:
                        f = False
                        for i in order_time:
                            if i[0] == message.text:
                                cos = 0
                                for b in data:
                                    if message.text == b[0]:
                                        cos = b[1]
                                order_time[order_time.index(i)][1] += 1
                                order_time[order_time.index(i)][2] = cos
                                print(i)
                                f = True

                        if not f:
                            cos = 0
                            for b in data:
                                if message.text == b[0]:
                                    cos = b[1]
                            order_time.append([message.text, 1, cos])
                        bot.send_message(id, '–ú—ã –∑–∞–ø–∏—Å–∞–ª–∏, —á—Ç–æ-—Ç–æ –µ—â–µ?')

                    else:
                        if '—Ö–æ—á—É' not in str(message.text.lower()).split():
                            bot.send_message(id, '–¢–∞–∫–æ–≥–æ –±–ª—é–¥–∞ –Ω–µ—Ç –≤ –Ω–∞—à–∏—Ö —Å–ø–∏—Å–∫–∞—Ö.')
                    n = ''

                    for i in order_time:
                        if i:
                            n += f'\nüîª{i[0]}\n –¶–µ–Ω–∞:    {i[1]}‚ÇΩ\n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –Ω–∞–±–æ—Ä–µ: {i[2]}—à—Ç.\n'

                    MEMORY_USER[id]['order'] = order_time

                    bot.send_message(id, '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä!')
                    pic = open('brosh_pic/wok_pic.jpg', 'rb')
                    bot.send_photo(id, pic)
                    kb_wok = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

                    bt_yd = types.KeyboardButton(text='–£–¥–æ–Ω —Å –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∞–º–∏ –ø–æ–¥ –∫–∏—Ç–∞–π—Å–∫–∏–º —Å–æ—É—Å–æ–º')
                    bt_end = types.KeyboardButton(text='–ù–∞ —ç—Ç–æ–º –≤—Å–µ')
                    bt_yd_2 = types.KeyboardButton(text='–£–¥–æ–Ω —Å –∫—É—Ä–∏—Ü–µ–π –ø–æ–¥ —Å–ª–∏–≤–æ—á–Ω—ã–º —Å–æ—É—Å–æ–º')
                    bt_lapsh = types.KeyboardButton(text='–õ–∞–ø—à–∞ —è–∏—á–Ω–∞—è —Å –¥–≤–æ–π–Ω–æ–π –∫—É—Ä–∏—Ü–µ–π –ø–æ–¥ —Å–æ—É—Å–æ–º —Ç–µ—Ä–∏—è–∫–µ')
                    bt_ris = types.KeyboardButton(text='–†–∏—Å —Å –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∞–º–∏')

                    kb_wok.add(bt_yd, bt_yd_2, bt_lapsh, bt_ris, bt_end)
                    bot.send_message(id, f"""–í–æ—Ç —á—Ç–æ –º—ã –º–æ–∂–µ–º –≤–∞–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å:{n}""", reply_markup=kb_wok)
                    MEMORY_USER[id]['FLAG'] = 'continue_wok'
                else:
                    bot.send_message(id, '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä!')
                    bot.send_message(id, '–ö–∞–∫ —è –º–æ–≥—É –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?', reply_markup=kb_skip)
                    MEMORY_USER[id]['FLAG'] = 'continue_wok'
                print('abaa')
            elif message.text.lower() == '—Ö–æ—á—É —Å–µ—Ç':
                print('asdasdasdasdasdasdas')
                kb_skip = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
                bt_s = types.KeyboardButton(text='-–ø–æ–ª—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º-')
                kb_skip.add(bt_s)
                if MEMORY_USER[id]['user_name'] != '':
                    order_time = []
                    connect = sqlite3.connect('eat.db')
                    cursor = connect.cursor()
                    cursor.execute(f"""SELECT name, cost, count FROM [Set]""")
                    data = cursor.fetchall()
                    if message.text in MEMORY_USER[id]['values']:
                        f = False
                        for i in order_time:
                            if i[0] == message.text:
                                cos = 0
                                for b in data:
                                    if message.text == b[0]:
                                        cos = b[1]
                                order_time[order_time.index(i)][1] += 1
                                order_time[order_time.index(i)][2] = cos
                                print(i)
                                f = True

                        if not f:
                            cos = 0
                            for b in data:
                                if message.text == b[0]:
                                    cos = b[1]
                            order_time.append([message.text, 1, cos])
                        bot.send_message(id, '–ú—ã –∑–∞–ø–∏—Å–∞–ª–∏, —á—Ç–æ-—Ç–æ –µ—â–µ?')

                    else:
                        if '—Ö–æ—á—É' not in str(message.text.lower()).split():
                            bot.send_message(id, '–¢–∞–∫–æ–≥–æ –±–ª—é–¥–∞ –Ω–µ—Ç –≤ –Ω–∞—à–∏—Ö —Å–ø–∏—Å–∫–∞—Ö.')
                    n = ''

                    for i in order_time:
                        if i:
                            n += f'\nüîª{i[0]}\n –¶–µ–Ω–∞:    {i[1]}‚ÇΩ\n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –Ω–∞–±–æ—Ä–µ: {i[2]}—à—Ç.\n'

                    MEMORY_USER[id]['order'] = order_time

                    bot.send_message(id, '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä!')
                    pic = open('brosh_pic/set_pic.jpg', 'rb')
                    bot.send_photo(id, pic)
                    kb_set = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                    bt_yd = types.KeyboardButton(text='–°–µ—Ç –ª–∞–π—Ç –∫–∏–Ω–≥ new')
                    bt_end = types.KeyboardButton(text='–ù–∞ —ç—Ç–æ–º –≤—Å–µ')
                    bt_yd_2 = types.KeyboardButton(text='–°–µ—Ç —Ñ–∏–ª–æ–º–∞–Ω–∏—è')
                    bt_lapsh = types.KeyboardButton(text='–°–µ—Ç –≤—Å–µ –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ new')
                    bt_ris = types.KeyboardButton(text='–°–µ—Ç –º–∞—Ç–µ—Ä—å –¥—Ä–∞–∫–æ–Ω–æ–≤ new')
                    kb_set.add(bt_yd, bt_yd_2, bt_lapsh, bt_ris, bt_end)
                    bot.send_message(id, f"""–í–æ—Ç —á—Ç–æ –º—ã –º–æ–∂–µ–º –≤–∞–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å:{n}""", reply_markup=kb_set)
                    cursor.execute(f"""
                                        UPDATE tg_session SET FLAG = 'continue_set' 
                                        WHERE tg_id = {id}""")

                else:
                    bot.send_message(id, '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä!')
                    bot.send_message(id, '–ö–∞–∫ —è –º–æ–≥—É –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?', reply_markup=kb_skip)
                    MEMORY_USER[id]['FLAG'] = 'continue_set'
                print('aaaa')

            if message.text.lower() == '—Ö–æ—á—É –º–æ—Ä—Å':
                kb_skip = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
                bt_s = types.KeyboardButton(text='-–ø–æ–ª—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º-')
                kb_skip.add(bt_s)

                if MEMORY_USER[id]['user_name']:
                    order_time = []
                    connect = sqlite3.connect('eat.db')
                    cursor = connect.cursor()
                    cursor.execute(f"""SELECT name, cost, count FROM juice""")
                    data = cursor.fetchall()

                    if message.text in MEMORY_USER[id]['values']:
                        f = False
                        for i in order_time:
                            if i[0] == message.text:
                                cos = 0
                                for b in data:
                                    if message.text == b[0]:
                                        cos = b[1]
                                order_time[order_time.index(i)][1] += 1
                                order_time[order_time.index(i)][2] = cos
                                print(i)
                                f = True

                        if not f:
                            cos = 0
                            for b in data:
                                if message.text == b[0]:
                                    cos = b[1]
                            order_time.append([message.text, 1, cos])
                        bot.send_message(id, '–ú—ã –∑–∞–ø–∏—Å–∞–ª–∏, —á—Ç–æ-—Ç–æ –µ—â–µ?')
                    else:
                        if '—Ö–æ—á—É' not in str(message.text.lower()).split():
                            bot.send_message(id, '–¢–∞–∫–æ–≥–æ –±–ª—é–¥–∞ –Ω–µ—Ç –≤ –Ω–∞—à–∏—Ö —Å–ø–∏—Å–∫–∞—Ö.')
                    n = ''

                    for i in order_time:
                        if i:
                            n += f'\nüîª{i[0]}\n –¶–µ–Ω–∞:    {i[1]}‚ÇΩ\n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –Ω–∞–±–æ—Ä–µ: {i[2]}—à—Ç.\n'

                    MEMORY_USER[id]['order'] = order_time

                    bot.send_message(id, '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä!')
                    pic = open('brosh_pic/juice_pic.jpg', 'rb')
                    bot.send_photo(id, pic)
                    kb_juic = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                    bt_kl = types.KeyboardButton(text='–ú–æ—Ä—Å –∫–ª—é–∫–≤–∞')
                    bt_brus = types.KeyboardButton(text='–ú–æ—Ä—Å –±—Ä—É—Å–Ω–∏–∫–∞')
                    bt_blc = types.KeyboardButton(text='–ú–æ—Ä—Å —á–µ—Ä–Ω–∞—è —Å–º–æ—Ä–æ–¥–∏–Ω–∞')
                    bt_obl = types.KeyboardButton(text='–ú–æ—Ä—Å –æ–±–ª–µ–ø–∏—Ö–∞-–º–µ–¥ –∏–º–±–∏—Ä—å')
                    bt_end = types.KeyboardButton(text='–ù–∞ —ç—Ç–æ–º –≤—Å–µ')
                    kb_juic.add(bt_kl, bt_brus, bt_blc, bt_obl, bt_end)
                    bot.send_message(id, f"""–í–æ—Ç —á—Ç–æ –º—ã –º–æ–∂–µ–º –≤–∞–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å:{n}""", reply_markup=kb_juic)
                    MEMORY_USER[id]['FLAG'] = 'continue_juice'
                else:
                    bot.send_message(id, '–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–π –≤—ã–±–æ—Ä!')
                    bot.send_message(id, '–ö–∞–∫ —è –º–æ–≥—É –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?', reply_markup=kb_skip)
                    MEMORY_USER[id]['FLAG'] = 'continue_juice'
                print('aaaa')
        elif MEMORY_USER[id]['FLAG'] == 'continue_roll':

            if not MEMORY_USER[id]['values']:
                connect = sqlite3.connect('eat.db')
                cursor = connect.cursor()
                cursor.execute(f"""SELECT name FROM rolls""")
                MEMORY_USER[id]['values'] = [i[0] for i in cursor.fetchall()]

            if message.text == '-–ø–æ–ª—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º-':
                bot.send_message(id, '–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é.')

            elif message.text.lower() == '–¥–∞':
                kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
                bt_rolls = types.KeyboardButton(text='–•–æ—á—É —Ä–æ–ª–ª—ã')
                bt_wok = types.KeyboardButton(text='–•–æ—á—É –≤–æ–∫')
                bt_set = types.KeyboardButton(text='–•–æ—á—É —Å–µ—Ç')
                kb.add(bt_set, bt_rolls, bt_wok)

                bot.send_message(id, '''–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é –≤–∞—Å! –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –∫–æ–º–ø–∞–Ω–∏–∏ Yandex Sushi
                                         –ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å–≤–æ–≤–∞—Ç—å –≤–∞—Å!
                                         –î–ª—è –∑–∞–∫–∞–∑–∞ —Ä–æ–ª–ª–æ–≤ –Ω–∞–ø–∏—à–∏—Ç–µ: "–•–æ—á—É —Ä–æ–ª–ª—ã"
                                         –î–ª—è –∑–∞–∫–∞–∑–∞ –≤–æ–∫–∞ –Ω–∞–ø–∏—à–∏—Ç–µ: "–•–æ—á—É –≤–æ–∫"
                                         –î–ª—è –∑–∞–∫–∞–∑–∞ –Ω–∞–±–æ—Ä–æ–≤ —Å—É—à–∏ –Ω–∞–ø–∏—à–∏—Ç–µ: "–•–æ—á—É —Å–µ—Ç"
                                         ''', reply_markup=kb)
                MEMORY_USER[id]['FLAG'] = 'continue_start'

            elif message.text.lower() == '–Ω–∞ —ç—Ç–æ–º –≤—Å–µ':
                kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                bt_yes = types.KeyboardButton(text='–î–∞, –≤—Å–µ –≤–µ—Ä–Ω–æ')
                bt_not = types.KeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å')
                kb.add(bt_yes, bt_not)
                count = 0
                n = ''
                for i in MEMORY_USER[id]['order']:
                    n += f'\nüîª {i[0]} \n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:    {i[1]}—à—Ç.\n –ó–∞ {i[1]}—à—Ç.: {int(i[2]) * int(i[1])}‚ÇΩ\n'
                    count += int(i[2]) * int(i[1])
                stri = f"""–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –ß—Ç–æ –∂–µ —É –Ω–∞—Å –≤ –∫–æ—Ä–∑–∏–Ω–µ?
_____________
{n}
    
–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ:  {count} —Ä—É–±.
    
_____________
    
–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ ? –û–Ω –±—É–¥–µ—Ç —Å—Ä–∞–∑—É –ø–µ—Ä–µ–¥–∞–Ω –Ω–∞ –∫—É—Ö–Ω—é !üòÉ"""
                bot.send_message(id, stri, reply_markup=kb)
                bot.send_message(id, "–ï—Å–ª–∏ –≤—ã –µ—Å—Ç—å –≤ –Ω–∞—à–∫–π –±–æ–Ω—É—Å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ, "
                                     "—Ç–æ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –º—ã –∑–∞—á–∏—Å–ª–∏–º –≤–∞–º 5% –±–æ–Ω—É—Å–Ω—ã—Ö —Ä—É–±–ª–µ–π –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞!")

                connect = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute(f"""SELECT user_id,
                       phone_number,
                       name_pers,
                       balance
                  FROM users WHERE user_id == '{id}';""")
                data = cursor.fetchall()

                if not data:
                    bot.send_message(message.chat.id, '–í—ã –Ω–µ —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ —Å–∏—Å—Ç–µ–º–µ.\n'
                                                      '–°–¥–µ–ª–∞–π—Ç–µ 1 –∑–∞–∫–∞–∑, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–∏—Å—Ç–µ–º—ã')
                else:
                    bot.send_message(message.chat.id, f'–í—ã —É–∂–µ —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ —Å–∏—Å—Ç–µ–º–µ –±–æ–Ω—É—Å–æ–≤.\n–í–∞—à–µ –∏–º—è: {data[0][2]}\n'
                                                      f'–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {data[0][1]}\n'
                                                      f'–í–∞—à –±–∞–ª–∞–Ω—Å: {data[0][3]}')
                    bonus = round((count * 1.05) - count)
                    bot.send_message(id, f'–ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ –≤–∞–º –±—É–¥–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–Ω–æ: {bonus} —Ä—É–±.')
                    b = data[0][3] + bonus
                    cursor.execute(f"""
    DELETE FROM users WHERE user_id = {id}
    """)
                    cursor.execute(f"""
    INSERT OR IGNORE INTO users (
                          user_id,
                          phone_number,
                          name_pers,
                          balance
                          )
    VALUES (
                        {id},
                        '{MEMORY_USER[id]['phone_number']}',
                        '{MEMORY_USER[id]['user_name']}',
                        {b}
            );
    """)
                    connect.commit()
                MEMORY_USER[id]['FLAG'] = 'continue_oform'

            elif MEMORY_USER[id]['user_name'] == '':
                MEMORY_USER[id]['user_name'] = message.text
                bot.send_message(id, f'{MEMORY_USER[id]["user_name"].capitalize()}, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')

            elif MEMORY_USER[id]["user_name"] != '' and MEMORY_USER[id]['phone_number'] == '':
                if check_num(message.text):
                    MEMORY_USER[id]['phone_number'] = message.text
                    kb_rolls = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                    bt_yd = types.KeyboardButton(text='–†–æ–ª–ª –§—É–¥–∑–∏')
                    bt_end = types.KeyboardButton(text='–ù–∞ —ç—Ç–æ–º –≤—Å–µ')
                    bt_yd_2 = types.KeyboardButton(text='–ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏—è —Å—è–∫–µ —Å –∏–∫—Ä–æ–π')
                    bt_lapsh = types.KeyboardButton(text='–ú–∞–Ω–≥–æ–≤—ã–π —É–Ω–∞–≥–∏')
                    bt_ris = types.KeyboardButton(text='–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è –∫–ª–∞—Å—Å–∏–∫–∞')
                    kb_rolls.add(bt_yd, bt_yd_2, bt_lapsh, bt_ris, bt_end)
                    connect = sqlite3.connect('eat.db')
                    cursor = connect.cursor()
                    cursor.execute(f"""SELECT name, cost, count FROM rolls""")
                    data = cursor.fetchall()
                    print(data)
                    n = ''

                    for i in data:
                        if i:
                            n += f'\nüîª{i[0]}\n –¶–µ–Ω–∞:    {i[1]}‚ÇΩ\n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –Ω–∞–±–æ—Ä–µ: {i[2]}—à—Ç.\n'
                    bot.send_message(id, '–•–æ—Ä–æ—à–æ, —á—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –∑–∞–∫–∞–∑–∞—Ç—å?')
                    pic = open('brosh_pic/rolls_pic.jpg', 'rb')
                    bot.send_photo(id, pic)
                    bot.send_message(id, f"""–í–æ—Ç —á—Ç–æ –º—ã –º–æ–∂–µ–º –≤–∞–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å:
    {n}""", reply_markup=kb_rolls)
                else:
                    bot.send_message(id, '–ù–æ–º–µ—Ä –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω...')
            elif MEMORY_USER[id]['user_name'] != '' and MEMORY_USER[id]['phone_number'] != '' \
                    and MEMORY_USER[id]['cont_order']:
                connect = sqlite3.connect('eat.db')
                cursor = connect.cursor()
                cursor.execute(f"""SELECT name, cost, count FROM rolls""")
                data = cursor.fetchall()

                if message.text in MEMORY_USER[id]['values']:
                    f = False

                    for i in MEMORY_USER[id]['order']:
                        if i[0] == message.text:
                            cos = 0

                            for b in data:
                                if message.text == b[0]:
                                    cos = b[1]
                            MEMORY_USER[id]['order'][MEMORY_USER[id]['order'].index(i)][1] += 1
                            MEMORY_USER[id]['order'][MEMORY_USER[id]['order'].index(i)][2] = cos
                            f = True
                    if not f:
                        cos = 0

                        for b in data:
                            if message.text == b[0]:
                                cos = b[1]
                        MEMORY_USER[id]['order'].append([message.text, 1, cos])
                    bot.send_message(id, '–ú—ã –∑–∞–ø–∏—Å–∞–ª–∏, —á—Ç–æ-—Ç–æ –µ—â–µ?')
                else:
                    bot.send_message(id, '–¢–∞–∫–æ–≥–æ –±–ª—é–¥–∞ –Ω–µ—Ç –≤ –Ω–∞—à–∏—Ö —Å–ø–∏—Å–∫–∞—Ö.')

        elif MEMORY_USER[id]['FLAG'] == 'continue_wok':

            if not MEMORY_USER[id]['values']:
                connect = sqlite3.connect('eat.db')
                cursor = connect.cursor()
                cursor.execute(f"""SELECT name FROM wok""")
                MEMORY_USER[id]['values'] = [i[0] for i in cursor.fetchall()]

            if message.text == '-–ø–æ–ª—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º-':
                bot.send_message(id, '–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é.')

            elif message.text.lower() == '–¥–∞':
                kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
                bt_rolls = types.KeyboardButton(text='–•–æ—á—É —Ä–æ–ª–ª—ã')
                bt_wok = types.KeyboardButton(text='–•–æ—á—É –≤–æ–∫')
                bt_set = types.KeyboardButton(text='–•–æ—á—É —Å–µ—Ç')
                kb.add(bt_set, bt_rolls, bt_wok)

                bot.send_message(id, '''–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é –≤–∞—Å! –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –∫–æ–º–ø–∞–Ω–∏–∏ Yandex Sushi
                                                 –ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å–≤–æ–≤–∞—Ç—å –≤–∞—Å!
                                                 –î–ª—è –∑–∞–∫–∞–∑–∞ —Ä–æ–ª–ª–æ–≤ –Ω–∞–ø–∏—à–∏—Ç–µ: "–•–æ—á—É —Ä–æ–ª–ª—ã"
                                                 –î–ª—è –∑–∞–∫–∞–∑–∞ –≤–æ–∫–∞ –Ω–∞–ø–∏—à–∏—Ç–µ: "–•–æ—á—É –≤–æ–∫"
                                                 –î–ª—è –∑–∞–∫–∞–∑–∞ –Ω–∞–±–æ—Ä–æ–≤ —Å—É—à–∏ –Ω–∞–ø–∏—à–∏—Ç–µ: "–•–æ—á—É —Å–µ—Ç"
                                                 ''', reply_markup=kb)
                MEMORY_USER[id]['FLAG'] = 'continue_start'

            elif message.text.lower() == '–Ω–∞ —ç—Ç–æ–º –≤—Å–µ':

                kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                bt_yes = types.KeyboardButton(text='–î–∞, –≤—Å–µ –≤–µ—Ä–Ω–æ')
                bt_not = types.KeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å')
                kb.add(bt_yes, bt_not)
                count = 0
                n = ''
                for i in MEMORY_USER[id]['order']:
                    n += f'\nüîª {i[0]} \n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:    {i[1]}—à—Ç.\n –ó–∞ {i[1]}—à—Ç.: {int(i[2]) * int(i[1])}‚ÇΩ\n'
                    count += int(i[2]) * int(i[1])
                stri = f"""–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –ß—Ç–æ –∂–µ —É –Ω–∞—Å –≤ –∫–æ—Ä–∑–∏–Ω–µ?
_____________
{n}
    
–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ:  {count} —Ä—É–±.
    
_____________
    
–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ ? –û–Ω –±—É–¥–µ—Ç —Å—Ä–∞–∑—É –ø–µ—Ä–µ–¥–∞–Ω –Ω–∞ –∫—É—Ö–Ω—é !üòÉ"""
                bot.send_message(id, stri, reply_markup=kb)
                bot.send_message(id, "–ï—Å–ª–∏ –≤—ã –µ—Å—Ç—å –≤ –Ω–∞—à–∫–π –±–æ–Ω—É—Å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ, "
                                     "—Ç–æ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –º—ã –∑–∞—á–∏—Å–ª–∏–º –≤–∞–º 5% –±–æ–Ω—É—Å–Ω—ã—Ö —Ä—É–±–ª–µ–π –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞!")

                connect = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute(f"""SELECT user_id,
                                   phone_number,
                                   name_pers,
                                   balance
                              FROM users WHERE user_id == '{id}';""")
                data = cursor.fetchall()

                if not data:
                    bot.send_message(message.chat.id, '–í—ã –Ω–µ —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ —Å–∏—Å—Ç–µ–º–µ.\n'
                                                      '–°–¥–µ–ª–∞–π—Ç–µ 1 –∑–∞–∫–∞–∑, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–∏—Å—Ç–µ–º—ã')
                else:
                    bot.send_message(message.chat.id, f'–í—ã —É–∂–µ —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ —Å–∏—Å—Ç–µ–º–µ –±–æ–Ω—É—Å–æ–≤.\n–í–∞—à–µ –∏–º—è: {data[0][2]}\n'
                                                      f'–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {data[0][1]}\n'
                                                      f'–í–∞—à –±–∞–ª–∞–Ω—Å: {data[0][3]}')
                    bonus = round((count * 1.05) - count)
                    bot.send_message(id, f'–ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ –≤–∞–º –±—É–¥–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–Ω–æ: {bonus} —Ä—É–±.')
                    b = data[0][3] + bonus
                    cursor.execute(f"""
                    DELETE FROM users WHERE user_id = {id}
                    """)
                    cursor.execute(f"""
                    INSERT INTO users (
                                          user_id,
                                          phone_number,
                                          name_pers,
                                          balance
                                      )
                                      VALUES (
                                        {id},
                                        '{MEMORY_USER[id]['phone_number']}',
                                        '{MEMORY_USER[id]['user_name']}',
                                        {b}
                                      );
                    """)
                MEMORY_USER[id]['FLAG'] = 'continue_oform'

            elif MEMORY_USER[id]['user_name'] == '':
                MEMORY_USER[id]['user_name'] = message.text
                bot.send_message(id, f'{MEMORY_USER[id]["user_name"].capitalize()}, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')

            elif MEMORY_USER[id]['user_name'] != '' and MEMORY_USER[id]['phone_number'] == '':

                if check_num(message.text):
                    MEMORY_USER[id]['phone_number'] = message.text
                    kb_wok = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

                    bt_yd = types.KeyboardButton(text='–£–¥–æ–Ω —Å –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∞–º–∏ –ø–æ–¥ –∫–∏—Ç–∞–π—Å–∫–∏–º —Å–æ—É—Å–æ–º')
                    bt_end = types.KeyboardButton(text='–ù–∞ —ç—Ç–æ–º –≤—Å–µ')
                    bt_yd_2 = types.KeyboardButton(text='–£–¥–æ–Ω —Å –∫—É—Ä–∏—Ü–µ–π –ø–æ–¥ —Å–ª–∏–≤–æ—á–Ω—ã–º —Å–æ—É—Å–æ–º')
                    bt_lapsh = types.KeyboardButton(text='–õ–∞–ø—à–∞ —è–∏—á–Ω–∞—è —Å –¥–≤–æ–π–Ω–æ–π –∫—É—Ä–∏—Ü–µ–π –ø–æ–¥ —Å–æ—É—Å–æ–º —Ç–µ—Ä–∏—è–∫–µ')
                    bt_ris = types.KeyboardButton(text='–†–∏—Å —Å –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∞–º–∏')

                    kb_wok.add(bt_yd, bt_yd_2, bt_lapsh, bt_ris, bt_end)
                    connect = sqlite3.connect('eat.db')
                    cursor = connect.cursor()
                    cursor.execute(f"""SELECT name, cost, count FROM wok""")
                    data = cursor.fetchall()
                    print(data)
                    n = ''

                    for i in data:

                        if i:
                            n += f'\nüîª{i[0]}\n –¶–µ–Ω–∞:    {i[1]}‚ÇΩ\n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –Ω–∞–±–æ—Ä–µ: {i[2]}—à—Ç.\n'
                    bot.send_message(id, '–•–æ—Ä–æ—à–æ, —á—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –∑–∞–∫–∞–∑–∞—Ç—å?')
                    pic = open('brosh_pic/wok_pic.jpg', 'rb')
                    bot.send_photo(id, pic)
                    bot.send_message(id, f"""–í–æ—Ç —á—Ç–æ –º—ã –º–æ–∂–µ–º –≤–∞–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å:
            {n}""", reply_markup=kb_wok)
                    number_phone = message.text

                else:
                    bot.send_message(id, '–ù–æ–º–µ—Ä –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω...')

            elif MEMORY_USER[id]['user_name'] and MEMORY_USER[id]['phone_number'] and MEMORY_USER[id]['cont_order']:
                connect = sqlite3.connect('eat.db')
                cursor = connect.cursor()
                cursor.execute(f"""SELECT name, cost, count FROM wok""")
                data = cursor.fetchall()

                if message.text in MEMORY_USER[id]['values']:
                    f = False

                    for i in MEMORY_USER[id]['order']:
                        if i[0] == message.text:
                            cos = 0

                            for b in data:
                                if message.text == b[0]:
                                    cos = b[1]
                            MEMORY_USER[id]['order'][MEMORY_USER[id]['order'].index(i)][1] += 1
                            MEMORY_USER[id]['order'][MEMORY_USER[id]['order'].index(i)][2] = cos
                            f = True
                    if not f:
                        cos = 0

                        for b in data:
                            if message.text == b[0]:
                                cos = b[1]
                        MEMORY_USER[id]['order'].append([message.text, 1, cos])
                    bot.send_message(id, '–ú—ã –∑–∞–ø–∏—Å–∞–ª–∏, —á—Ç–æ-—Ç–æ –µ—â–µ?')
                else:
                    bot.send_message(id, '–¢–∞–∫–æ–≥–æ –±–ª—é–¥–∞ –Ω–µ—Ç –≤ –Ω–∞—à–∏—Ö —Å–ø–∏—Å–∫–∞—Ö.')

        elif MEMORY_USER[id]['FLAG'] == 'continue_set':

            if not MEMORY_USER[id]['values']:
                connect = sqlite3.connect('eat.db')
                cursor = connect.cursor()
                cursor.execute(f"""SELECT name FROM [Set]""")
                MEMORY_USER[id]['values'] = [i[0] for i in cursor.fetchall()]

            if message.text == '-–ø–æ–ª—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º-':
                bot.send_message(id, '–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é.')

            elif message.text.lower() == '–¥–∞':

                kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
                bt_rolls = types.KeyboardButton(text='–•–æ—á—É —Ä–æ–ª–ª—ã')
                bt_wok = types.KeyboardButton(text='–•–æ—á—É –≤–æ–∫')
                bt_set = types.KeyboardButton(text='–•–æ—á—É —Å–µ—Ç')
                kb.add(bt_set, bt_rolls, bt_wok)

                bot.send_message(id, '''–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é –≤–∞—Å! –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –∫–æ–º–ø–∞–Ω–∏–∏ Yandex Sushi
                                                 –ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å–≤–æ–≤–∞—Ç—å –≤–∞—Å!
                                                 –î–ª—è –∑–∞–∫–∞–∑–∞ —Ä–æ–ª–ª–æ–≤ –Ω–∞–ø–∏—à–∏—Ç–µ: "–•–æ—á—É —Ä–æ–ª–ª—ã"
                                                 –î–ª—è –∑–∞–∫–∞–∑–∞ –≤–æ–∫–∞ –Ω–∞–ø–∏—à–∏—Ç–µ: "–•–æ—á—É –≤–æ–∫"
                                                 –î–ª—è –∑–∞–∫–∞–∑–∞ –Ω–∞–±–æ—Ä–æ–≤ —Å—É—à–∏ –Ω–∞–ø–∏—à–∏—Ç–µ: "–•–æ—á—É —Å–µ—Ç"
                                                 ''', reply_markup=kb)
                MEMORY_USER[id]['FLAG'] = 'continue_start'

            elif message.text.lower() == '–Ω–∞ —ç—Ç–æ–º –≤—Å–µ':
                kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                bt_yes = types.KeyboardButton(text='–î–∞, –≤—Å–µ –≤–µ—Ä–Ω–æ')
                bt_not = types.KeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å')
                kb.add(bt_yes, bt_not)
                count = 0
                n = ''

                for i in MEMORY_USER[id]['order']:
                    n += f'\nüîª {i[0]} \n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:    {i[1]}—à—Ç.\n –ó–∞ {i[1]}—à—Ç.: {int(i[2]) * int(i[1])}‚ÇΩ\n'
                    count += int(i[2]) * int(i[1])
                stri = f"""–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –ß—Ç–æ –∂–µ —É –Ω–∞—Å –≤ –∫–æ—Ä–∑–∏–Ω–µ?
_____________
{n}
    
–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ:  {count} —Ä—É–±.
    
_____________
    
–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ ? –û–Ω –±—É–¥–µ—Ç —Å—Ä–∞–∑—É –ø–µ—Ä–µ–¥–∞–Ω –Ω–∞ –∫—É—Ö–Ω—é !üòÉ"""
                bot.send_message(id, stri, reply_markup=kb)
                bot.send_message(id, "–ï—Å–ª–∏ –≤—ã –µ—Å—Ç—å –≤ –Ω–∞—à–∫–π –±–æ–Ω—É—Å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ, "
                                     "—Ç–æ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –º—ã –∑–∞—á–∏—Å–ª–∏–º –≤–∞–º 5% –±–æ–Ω—É—Å–Ω—ã—Ö —Ä—É–±–ª–µ–π –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞!")

                connect = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute(f"""SELECT user_id,
                                   phone_number,
                                   name_pers,
                                   balance
                              FROM users WHERE user_id == '{id}';""")
                data = cursor.fetchall()

                if not data:
                    bot.send_message(message.chat.id, '–í—ã –Ω–µ —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ —Å–∏—Å—Ç–µ–º–µ.\n'
                                                      '–°–¥–µ–ª–∞–π—Ç–µ 1 –∑–∞–∫–∞–∑, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–∏—Å—Ç–µ–º—ã')
                else:
                    bot.send_message(message.chat.id, f'–í—ã —É–∂–µ —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ —Å–∏—Å—Ç–µ–º–µ –±–æ–Ω—É—Å–æ–≤.\n–í–∞—à–µ –∏–º—è: {data[0][2]}\n'
                                                      f'–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {data[0][1]}\n'
                                                      f'–í–∞—à –±–∞–ª–∞–Ω—Å: {data[0][3]}')
                    bonus = round((count * 1.05) - count)
                    bot.send_message(id, f'–ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ –≤–∞–º –±—É–¥–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–Ω–æ: {bonus} —Ä—É–±.')
                    b = data[0][3] + bonus
                    cursor.execute(f"""
                    DELETE FROM users WHERE user_id = {id}
                    """)
                    cursor.execute(f"""
                    INSERT INTO users (
                                          user_id,
                                          phone_number,
                                          name_pers,
                                          balance
                                      )
                                      VALUES (
                                        {id},
                                        '{MEMORY_USER[id]['phone_number']}',
                                        '{MEMORY_USER[id]['user_name']}',
                                        {b}
                                      );
                    """)
                    connect.commit()
                    connect.commit()
                MEMORY_USER[id]['FLAG'] = 'continue_oform'

            elif MEMORY_USER[id]['user_name'] == '':
                MEMORY_USER[id]['user_name'] = message.text
                bot.send_message(id, f'{MEMORY_USER[id]["user_name"].capitalize()}, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')

            elif MEMORY_USER[id]['user_name'] != '' and MEMORY_USER[id]['phone_number'] == '':

                if check_num(message.text):
                    MEMORY_USER[id]['phone_number'] = message.text
                    kb_set = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

                    bt_yd = types.KeyboardButton(text='–°–µ—Ç –ª–∞–π—Ç –∫–∏–Ω–≥ new')
                    bt_end = types.KeyboardButton(text='–ù–∞ —ç—Ç–æ–º –≤—Å–µ')
                    bt_yd_2 = types.KeyboardButton(text='–°–µ—Ç —Ñ–∏–ª–æ–º–∞–Ω–∏—è')
                    bt_lapsh = types.KeyboardButton(text='–°–µ—Ç –≤—Å–µ –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ new')
                    bt_ris = types.KeyboardButton(text='–°–µ—Ç –º–∞—Ç–µ—Ä—å –¥—Ä–∞–∫–æ–Ω–æ–≤ new')

                    kb_set.add(bt_yd, bt_yd_2, bt_lapsh, bt_ris, bt_end)
                    connect = sqlite3.connect('eat.db')
                    cursor = connect.cursor()
                    cursor.execute(f"""SELECT name, cost, count FROM [Set]""")
                    data = cursor.fetchall()
                    print(data)
                    n = ''

                    for i in data:
                        if i:
                            n += f'\nüîª{i[0]}\n –¶–µ–Ω–∞:    {i[1]}‚ÇΩ\n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –Ω–∞–±–æ—Ä–µ: {i[2]}—à—Ç.\n'

                    bot.send_message(id, '–•–æ—Ä–æ—à–æ, —á—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –∑–∞–∫–∞–∑–∞—Ç—å?')
                    pic = open('brosh_pic/set_pic.jpg', 'rb')
                    bot.send_photo(id, pic)
                    bot.send_message(id, f"""–í–æ—Ç —á—Ç–æ –º—ã –º–æ–∂–µ–º –≤–∞–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å:
            {n}""", reply_markup=kb_set)

                else:
                    bot.send_message(id, '–ù–æ–º–µ—Ä –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω...')

            elif MEMORY_USER[id]['user_name'] != '' and MEMORY_USER[id]['phone_number'] != '' \
                    and MEMORY_USER[id]['cont_order']:
                connect = sqlite3.connect('eat.db')
                cursor = connect.cursor()
                cursor.execute(f"""SELECT name, cost, count FROM [Set]""")
                data = cursor.fetchall()
                order_time = []
                if message.text in MEMORY_USER[id]['values']:
                    f = False

                    for i in MEMORY_USER[id]['order']:
                        if i[0] == message.text:
                            cos = 0

                            for b in data:
                                if message.text == b[0]:
                                    cos = b[1]
                            MEMORY_USER[id]['order'][MEMORY_USER[id]['order'].index(i)][1] += 1
                            MEMORY_USER[id]['order'][MEMORY_USER[id]['order'].index(i)][2] = cos
                            print(i)
                            f = True

                    if not f:
                        cos = 0
                        for b in data:
                            if message.text == b[0]:
                                cos = b[1]
                        MEMORY_USER[id]['order'].append([message.text, 1, cos])
                    bot.send_message(id, '–ú—ã –∑–∞–ø–∏—Å–∞–ª–∏, —á—Ç–æ-—Ç–æ –µ—â–µ?')

                else:
                    bot.send_message(id, '–¢–∞–∫–æ–≥–æ –±–ª—é–¥–∞ –Ω–µ—Ç –≤ –Ω–∞—à–∏—Ö —Å–ø–∏—Å–∫–∞—Ö.')

        elif MEMORY_USER[id]['FLAG'] == 'continue_juice':

            if not MEMORY_USER[id]['values']:
                connect = sqlite3.connect('eat.db')
                cursor = connect.cursor()
                cursor.execute(f"""SELECT name FROM juice""")
                MEMORY_USER[id]['values'] = [i[0] for i in cursor.fetchall()]

            if message.text == '-–ø–æ–ª—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º-':
                bot.send_message(id, '–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤—Ä—É—á–Ω—É—é.')

            elif message.text.lower() == '–¥–∞':
                kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
                bt_rolls = types.KeyboardButton(text='–•–æ—á—É —Ä–æ–ª–ª—ã')
                bt_wok = types.KeyboardButton(text='–•–æ—á—É –≤–æ–∫')
                bt_set = types.KeyboardButton(text='–•–æ—á—É —Å–µ—Ç')
                bt_ju = types.KeyboardButton(text='–•–æ—á—É –º–æ—Ä—Å')
                kb.add(bt_set, bt_rolls, bt_wok, bt_ju)

                bot.send_message(id, '''–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é –≤–∞—Å! –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –∫–æ–º–ø–∞–Ω–∏–∏ Yandex Sushi
–ú—ã —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å–≤–æ–≤–∞—Ç—å –≤–∞—Å!
–î–ª—è –∑–∞–∫–∞–∑–∞ —Ä–æ–ª–ª–æ–≤ –Ω–∞–ø–∏—à–∏—Ç–µ: "–•–æ—á—É —Ä–æ–ª–ª—ã"
–î–ª—è –∑–∞–∫–∞–∑–∞ –≤–æ–∫–∞ –Ω–∞–ø–∏—à–∏—Ç–µ: "–•–æ—á—É –≤–æ–∫"
–î–ª—è –∑–∞–∫–∞–∑–∞ –Ω–∞–±–æ—Ä–æ–≤ —Å—É—à–∏ –Ω–∞–ø–∏—à–∏—Ç–µ: "–•–æ—á—É —Å–µ—Ç"
–î–ª—è –∑–∞–∫–∞–∑–∞ –Ω–∞–ø–∏—Ç–∫–æ–≤: "–•–æ—á—É –º–æ—Ä—Å"
    ''', reply_markup=kb)
                MEMORY_USER[id]['FLAG'] = 'continue_start'

            elif message.text.lower() == '–Ω–∞ —ç—Ç–æ–º –≤—Å–µ':
                kb = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                bt_yes = types.KeyboardButton(text='–î–∞, –≤—Å–µ –≤–µ—Ä–Ω–æ')
                bt_not = types.KeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å')
                kb.add(bt_yes, bt_not)
                count = 0
                n = ''
                for i in MEMORY_USER[id]['order']:
                    n += f'\nüîª {i[0]} \n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:    {i[1]}—à—Ç.\n –ó–∞ {i[1]}—à—Ç.: {int(i[2]) * int(i[1])}‚ÇΩ\n'
                    count += int(i[2]) * int(i[1])
                stri = f"""–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –ß—Ç–æ –∂–µ —É –Ω–∞—Å –≤ –∫–æ—Ä–∑–∏–Ω–µ?
_____________
{n}
    
–ò—Ç–æ–≥–æ –∫ –æ–ø–ª–∞—Ç–µ:  {count} —Ä—É–±.
    
_____________
    
–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ ? –û–Ω –±—É–¥–µ—Ç —Å—Ä–∞–∑—É –ø–µ—Ä–µ–¥–∞–Ω –Ω–∞ –∫—É—Ö–Ω—é !üòÉ"""
                bot.send_message(id, stri, reply_markup=kb)
                bot.send_message(id, "–ï—Å–ª–∏ –≤—ã –µ—Å—Ç—å –≤ –Ω–∞—à–∫–π –±–æ–Ω—É—Å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ, "
                                     "—Ç–æ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –º—ã –∑–∞—á–∏—Å–ª–∏–º –≤–∞–º 5% –±–æ–Ω—É—Å–Ω—ã—Ö —Ä—É–±–ª–µ–π –æ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞!")

                connect = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute(f"""SELECT user_id,
                                               phone_number,
                                               name_pers,
                                               balance
                                          FROM users WHERE user_id == '{id}';""")
                data = cursor.fetchall()

                if not data:
                    bot.send_message(message.chat.id, '–í—ã –Ω–µ —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ —Å–∏—Å—Ç–µ–º–µ.\n'
                                                      '–°–¥–µ–ª–∞–π—Ç–µ 1 –∑–∞–∫–∞–∑, —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Å–∏—Å—Ç–µ–º—ã')
                else:
                    bot.send_message(message.chat.id, f'–í—ã —É–∂–µ —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ —Å–∏—Å—Ç–µ–º–µ –±–æ–Ω—É—Å–æ–≤.\n–í–∞—à–µ –∏–º—è: {data[0][2]}\n'
                                                      f'–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {data[0][1]}\n'
                                                      f'–í–∞—à –±–∞–ª–∞–Ω—Å: {data[0][3]}')
                    bonus = round((count * 1.05) - count)
                    bot.send_message(id, f'–ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞ –≤–∞–º –±—É–¥–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–Ω–æ: {bonus} —Ä—É–±.')
                    b = data[0][3] + bonus
                    cursor.execute(f"""
                                DELETE FROM users WHERE user_id = {id}
                                """)
                    cursor.execute(f"""
                                INSERT INTO users (
                                                      user_id,
                                                      phone_number,
                                                      name_pers,
                                                      balance
                                                  )
                                                  VALUES (
                                                      {id},
                                                      '{MEMORY_USER[id]['phone_number']}',
                                                      '{MEMORY_USER[id]['user_name']}',
                                                      {b}
                                                  );
                                """)
                MEMORY_USER[id]['FLAG'] = 'continue_oform'

            elif MEMORY_USER[id]['user_name'] == '':
                MEMORY_USER[id]['user_name'] = message.text
                bot.send_message(id, f'{MEMORY_USER[id]["user_name"].capitalize()}, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')

            elif MEMORY_USER[id]["user_name"] != '' and MEMORY_USER[id]["phone_number"] == '':

                if check_num(message.text):
                    MEMORY_USER[id]["phone_number"] = message.text
                    kb_juic = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

                    # –Ω–∞—à–∏ –Ω–∞–ø–∏—Ç–∫–∏ –≤ –º–µ–Ω—é
                    bt_kl = types.KeyboardButton(text='–ú–æ—Ä—Å –∫–ª—é–∫–≤–∞')
                    bt_brus = types.KeyboardButton(text='–ú–æ—Ä—Å –±—Ä—É—Å–Ω–∏–∫–∞')
                    bt_blc = types.KeyboardButton(text='–ú–æ—Ä—Å —á–µ—Ä–Ω–∞—è —Å–º–æ—Ä–æ–¥–∏–Ω–∞')
                    bt_obl = types.KeyboardButton(text='–ú–æ—Ä—Å –æ–±–ª–µ–ø–∏—Ö–∞-–º–µ–¥ –∏–º–±–∏—Ä—å')
                    bt_end = types.KeyboardButton(text='–ù–∞ —ç—Ç–æ–º –≤—Å–µ')
                    kb_juic.add(bt_kl, bt_brus, bt_blc, bt_obl, bt_end)
                    connect = sqlite3.connect('eat.db')
                    cursor = connect.cursor()
                    cursor.execute(f"""SELECT name, cost, count FROM juice""")
                    data = cursor.fetchall()
                    print(data)
                    n = ''

                    for i in data:
                        if i:
                            n += f'\nüîª{i[0]}\n –¶–µ–Ω–∞:    {i[1]}‚ÇΩ\n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤ –Ω–∞–±–æ—Ä–µ: {i[2]}—à—Ç.\n'
                    bot.send_message(id, '–•–æ—Ä–æ—à–æ, —á—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –∑–∞–∫–∞–∑–∞—Ç—å?')
                    pic = open('brosh_pic/juice_pic.jpg', 'rb')
                    bot.send_photo(id, pic)

                    # –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –Ω–∞—à–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö
                    bot.send_message(id, f"""–í–æ—Ç —á—Ç–æ –º—ã –º–æ–∂–µ–º –≤–∞–º –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å:
                {n}""", reply_markup=kb_juic)
                    number_phone = message.text

                else:
                    bot.send_message(id, '–ù–æ–º–µ—Ä –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω...')

            elif MEMORY_USER[id]["user_name"] != '' and MEMORY_USER[id]["phone_number"] != '' \
                    and MEMORY_USER[id]["cont_order"]:
                connect = sqlite3.connect('eat.db')
                cursor = connect.cursor()
                cursor.execute(f"""SELECT name, cost, count FROM juice""")
                data = cursor.fetchall()
                order_time = []
                if message.text in MEMORY_USER[id]["values"]:
                    f = False

                    for i in MEMORY_USER[id]["order"]:
                        if i[0] == message.text:
                            cos = 0

                            for b in data:
                                if message.text == b[0]:
                                    cos = b[1]
                            MEMORY_USER[id]["order"][MEMORY_USER[id]["order"].index(i)][1] += 1
                            MEMORY_USER[id]["order"][MEMORY_USER[id]["order"].index(i)][2] = cos
                            f = True

                    if not f:
                        cos = 0
                        for b in data:
                            if message.text == b[0]:
                                cos = b[1]
                        MEMORY_USER[id]["order"].append([message.text, 1, cos])
                    bot.send_message(id, '–ú—ã –∑–∞–ø–∏—Å–∞–ª–∏, —á—Ç–æ-—Ç–æ –µ—â–µ?')

                else:
                    bot.send_message(id, '–¢–∞–∫–æ–≥–æ –±–ª—é–¥–∞ –Ω–µ—Ç –≤ –Ω–∞—à–∏—Ö —Å–ø–∏—Å–∫–∞—Ö.')

        else:
            bot.send_message(id, '–Ø –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à—É –∫–æ–º–∞–Ω–¥—É...')
            user_name = message.text

    except Exception as E:
        bot.send_message(message.chat.id, '–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞!\n –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã.')
        MEMORY_USER.clear()
        print(E)


if __name__ == '__main__':
    bot.polling(none_stop=True)